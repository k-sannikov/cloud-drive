version: "3.9"
services:

  notes_store:
    container_name: notes_store
    build:
      context: ..
      dockerfile: ./NotesStore/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: https://+:443;http://+:80
      ASPNETCORE_Kestrel__Certificates__Default__Password: 123
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/notes_store.pfx
    ports:
      - "5034:80"
      - "7168:443"
    networks:
      cloud_drive_network:
        aliases:
          - notes-store.dev
    volumes:
      - ./notes_store/https:/https
    links:
      - postgres

  migrations:
    container_name: notes_store_migrations
    build:
      context: ..
      dockerfile: ./Infrastructure.Migrations/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    networks:
      - cloud_drive_network
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres

  postgres:
    container_name: notes_store_postgres
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5433:5432"
    networks:
      - cloud_drive_network
    volumes:
      - ./postgres/entrypoint-initdb:/docker-entrypoint-initdb.d
      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d notes_store"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    container_name: notes_store_pgadmin
    image: dpage/pgadmin4:7.8
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@mail.com
      PGADMIN_DEFAULT_PASSWORD: 123
    ports:
      - "5051:80"
    networks:
      - cloud_drive_network
    links:
      - postgres
networks:
    cloud_drive_network:
        name: "cloud_drive_network"