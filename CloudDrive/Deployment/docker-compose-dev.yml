version: "3.9"
services:

  cloud_drive:
    container_name: cloud_drive
    build:
      context: ..
      dockerfile: ./CloudDrive/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: https://+:443;http://+:80
      ASPNETCORE_Kestrel__Certificates__Default__Password: 123
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/cloud_drive.pfx
    ports:
      - "5033:80"
      - "7167:443"
    volumes:
      - ./cloud_drive/https:/https
    links:
      - postgres
      - neo4j

  migrations:
    container_name: migrations
    build:
      context: ..
      dockerfile: ./Infrastructure.Migrations/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/entrypoint-initdb:/docker-entrypoint-initdb.d
      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cloud_drive"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.8
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@mail.com
      PGADMIN_DEFAULT_PASSWORD: 123
    ports:
      - "5050:80"
    links:
      - postgres

  neo4j:
    container_name: neo4j
    image: neo4j:4.2.3
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/conf:/var/lib/neo4j/conf
      - ./neo4j/logs:/logs
      - ./neo4j/import:/var/lib/neo4j/import
      - ./neo4j/plugins:/plugins
    environment:
      NEO4J_AUTH: neo4j/123 
    ports:
      - "7474:7474"